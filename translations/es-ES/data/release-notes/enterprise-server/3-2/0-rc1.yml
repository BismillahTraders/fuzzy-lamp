date: '2021-09-09'
release_candidate: true
deprecated: true
intro: If {% data variables.product.product_location %} is running a release candidate build, you can't upgrade with a hotpatch. We recommend only running release candidates on test environments.
sections:
  features:
    - heading: Custom patterns for secret scanning
      notes:
        # https://github.com/github/releases/issues/1426
        - |
          {% data variables.product.prodname_GH_advanced_security %} customers can now specify custom patterns for secret scanning. When a new pattern is specified, secret scanning searches a repository's entire Git history for the pattern, as well as any new commits.

          User defined patterns are in beta for {% data variables.product.prodname_ghe_server %} 3.2. They can be defined at the repository, organization, and enterprise levels. For more information, see "[Defining custom patterns for secret scanning](/code-security/secret-scanning/defining-custom-patterns-for-secret-scanning)."

    - heading: Security overview for Advanced Security (beta)
      notes:
        # https://github.com/github/releases/issues/1381
        - |
          {% data variables.product.prodname_GH_advanced_security %} customers now have an organization-level view of the application security risks detected by {% data variables.product.prodname_code_scanning %}, {% data variables.product.prodname_dependabot %}, and {% data variables.product.prodname_secret_scanning %}. The security overview shows the enablement status of security features on each repository, as well as the number of alerts detected.

          In addition, the security overview lists all {% data variables.product.prodname_secret_scanning %} alerts at the organization level. Similar views for {% data variables.product.prodname_dependabot %} and {% data variables.product.prodname_code_scanning %} alerts are coming in future releases. For more information, see "[About the security overview](/code-security/security-overview/about-the-security-overview)."

          ![Screenshot of security overview](/assets/images/enterprise/3.2/release-notes/security-overview-UI.png)

    - heading: Dependency review (beta)
      notes:
        # https://github.com/github/releases/issues/1364
        - |
          {% data variables.product.prodname_GH_advanced_security %} customers can now see a rich diff of the dependencies changed in a pull request. Dependency review provides an easy-to-understand view of dependency changes and their security impact in the "Files changed" tab of pull requests. It informs you of which dependencies were added, removed, or updated, along with vulnerability information for these dependencies. For more information, see "[Reviewing dependency changes in a pull request](/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/reviewing-dependency-changes-in-a-pull-request)."

    - heading: GitHub Actions environments
      notes:
        # https://github.com/github/releases/issues/1308
        - |
          Environments, environment protection rules, and environment secrets are now generally available for {% data variables.product.prodname_actions %} on {% data variables.product.product_name %}. For more information, see "[Environments](/actions/reference/environments)."

          ![Environment protection rules](/assets/images/enterprise/3.2/release-notes/actions-environments.png)

    - heading: SSH authentication with security keys
      notes:
        # https://github.com/github/releases/issues/1276
        - |
          SSH authentication using a FIDO2 security key is now supported when you add a `sk-ecdsa-sha2-nistp256@openssh.com` or `sk-ssh-ed25519@openssh.com` SSH key to your account. SSH security keys store secret key material on a separate hardware device that requires verification, such as a tap, to operate. For more information, see "[Generating a new SSH key and adding it to the ssh-agent](/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key-for-a-hardware-security-key)."

    - heading: 'Dark and dark dimmed themes'
      notes:
        # https://github.com/github/releases/issues/1260
        - |
          Dark and dark dimmed themes are now available for the web UI. {% data variables.product.product_name %} will match your system preferences when you haven't set theme preferences in {% data variables.product.product_name %}. You can also choose which themes are active during the day and night. For more information, see "[Managing your theme settings](/github/setting-up-and-managing-your-github-user-account/managing-user-account-settings/managing-your-theme-settings)."

          ![Dark and dark dimmed themes](https://user-images.githubusercontent.com/33528647/114629560-d2231f80-9c86-11eb-9bde-cc301a97040d.gif)

    - heading: 'Approving unverified domains for email notifications'
      notes:
        # https://github.com/github/releases/issues/1244
        - Domains that are not able to be verified can now be approved for email notification routing. Enterprise and organization owners will be able to approve domains and immediately augment their email notification restriction policy, allowing notifications to be sent to collaborators, consultants, acquisitions, or other partners. For more information, see "[Verifying or approving a domain for your enterprise](/admin/configuration/configuring-your-enterprise/verifying-or-approving-a-domain-for-your-enterprise#about-approval-of-domains)" and "[Restricting email notifications for your enterprise](/admin/policies/enforcing-policies-for-your-enterprise/restricting-email-notifications-for-your-enterprise#restricting-email-notifications-for-your-enterprise-account)."

    - heading: 'Git Credential Manager (GCM) secure credential storage and multi-factor authentication support'
      notes:
        # https://github.com/github/releases/issues/1406
        - |
          Git Credential Manager (GCM) versions 2.0.452 and later now provide security-hardened credential storage and multi-factor authentication support for {% data variables.product.product_name %}.

          GCM with support for {% data variables.product.product_name %} is included with [Git for Windows](https://gitforwindows.org) versions 2.32 and later. GCM is not included with Git for macOS or Linux, but can be installed separately. For more information, see the [latest release](https://github.com/GitCredentialManager/git-credential-manager/releases/) and [installation instructions](https://github.com/GitCredentialManager/git-credential-manager/releases/) in the `GitCredentialManager/git-credential-manager` repository.

  changes:
    - heading: Administration Changes
      notes:
        # https://github.com/github/releases/issues/1309
        - A 'User Agent Referrer Policy' setting has been added to the enterprise settings. This allows an admin to set a stricter `Referrer-Policy` to hide the hostname of a {% data variables.product.prodname_ghe_server %} installation from external sites. The setting is disabled by default and is tracked by audit log events for staff and enterprise owners when enabled or disabled. For more information, see "[Configuring Referrer Policy for your enterprise](/admin/configuration/configuring-your-enterprise/configuring-the-referrer-policy-for-your-enterprise)."

        # https://github.com/github/releases/issues/1515
        - The MySQL health check was changed to use `mysqladmin ping` instead of TCP checks, which removes some unnecessary noise in the MySQL error log. Also, Orchestrator failover checks were improved to prevent unnecessary MySQL failovers when applying cluster config changes.

        # https://github.com/github/releases/issues/1287
        - The Resque service, which supports background job processing, has been replaced with Aqueduct Lite. This change makes the job system easier to manage and should not affect the user experience. For the new administration and debugging commands for Aqueduct, see "[Command-line utilities](/admin/configuration/configuring-your-enterprise/command-line-utilities#ghe-aqueduct)."

    - heading: Token Changes
      notes:
        # https://github.com/github/releases/issues/1235
        - |
          The format of authentication tokens for {% data variables.product.product_name %} has changed. The change affects the format of personal access tokens and access tokens for {% data variables.product.prodname_oauth_apps %}, as well as user-to-server, server-to-server, and refresh tokens for {% data variables.product.prodname_github_apps %}.

          The different token types now have unique identifiable prefixes, which allows for secret scanning to detect the tokens so that you can mitigate the impact of someone accidentally committing a token to a repository. {% data variables.product.company_short %} recommends updating existing tokens as soon as possible. For more information, see "[About authentication to {% data variables.product.prodname_dotcom %}](/github/authenticating-to-github/keeping-your-account-and-data-secure/about-authentication-to-github#githubs-token-formats)" and "[About {% data variables.product.prodname_secret_scanning %}](/code-security/secret-security/about-secret-scanning)."

    - heading: 'Repositories changes'
      notes:
        # https://github.com/github/releases/issues/1295
        - Repositories on user profiles and organization profiles now support sorting by star count.

        # https://github.com/github/releases/issues/1327
        - When viewing the commit history of a single file, you can now click {% octicon "file-code" aria-label="The code icon" %} to view that file at the selected point in history.

        # https://github.com/github/releases/issues/1254
        - When a submodule is defined with a relative path in {% data variables.product.product_location %}, the submodule is now clickable in the web UI. Clicking the submodule in the web UI will take you to the linked repository. Previously, only submodules with absolute URLs were clickable. This is supported for relative paths for repositories with the same owner that follow the pattern <code>../<em>REPOSITORY</em></code> or relative paths for repositories with a different owner that follow the pattern <code>../<em>OWNER</em>/<em>REPOSITORY</em></code>. For more information about working with submodules, see [Working with submodules](https://github.blog/2016-02-01-working-with-submodules/) on {% data variables.product.prodname_blog %}.

        # https://github.com/github/releases/issues/1250
        - The web UI can now be used to synchronize an out-of-date branch of a fork with the fork's upstream branch. If there are no merge conflicts between the branches, the branch is updated either by fast-forwarding or by merging from upstream. If there are conflicts, you will be prompted to create a pull request to resolve the conflicts. For more information, see "[Syncing a fork](/github/collaborating-with-pull-requests/working-with-forks/syncing-a-fork#syncing-a-fork-from-the-web-ui)."

    - heading: 'Markdown changes'
      notes:
        # https://github.com/github/releases/issues/1477
        - The markdown editor used when creating or editing a release in a repository now has a text-editing toolbar. For more information, see "[Managing releases in a repository](/github/administering-a-repository/releasing-projects-on-github/managing-releases-in-a-repository#creating-a-release)."

        # https://github.com/github/releases/issues/1169
        - Uploading video files is now supported everywhere you write Markdown on {% data variables.product.product_name %}. Share demos, reproduction steps, and more in your issue and pull request comments, as well as in Markdown files within repositories, such as READMEs. For more information, see "[Attaching files](/github/writing-on-github/working-with-advanced-formatting/attaching-files)."

        # https://github.com/github/releases/issues/1269
        - Markdown files will now automatically generate a table of contents in the header when there are 2 or more headings. The table of contents is interactive and links to the selected section. All 6 Markdown heading levels are supported.

        # https://github.com/github/releases/issues/1294
        - 'There is a new keyboard shortcut, `cmd+e` on macOS or `ctrl+e` on Windows, to insert codeblocks in Markdown files, issues, pull requests, and comments.'

        # https://github.com/github/releases/issues/1474
        - Appending `?plain=1` to the URL for any Markdown file will now display the file without rendering and with line numbers. The plain view can be used to link other users to specific lines. For example, appending `?plain=1#L52` will highlight line 52 of a plain text Markdown file. For more information, "[Creating a permanent link to a code snippet](/github/writing-on-github/working-with-advanced-formatting/creating-a-permanent-link-to-a-code-snippet#linking-to-markdown)."

    - heading: 'Issues and pull requests changes'
      notes:
        # https://github.com/github/releases/issues/1413
        - With the [latest version of Octicons](https://github.com/primer/octicons/releases), the states of issues and pull requests are now more visually distinct so you can scan their status more easily. For more information, see [{% data variables.product.prodname_blog %}](https://github.blog/changelog/2021-06-08-new-issue-and-pull-request-state-icons/).

        # https://github.com/github/releases/issues/1419
        - A new "Require conversation resolution before merging" branch protection rule and "Conversations" menu is now available. Easily discover your pull request comments from the "Files changed" tab, and require that all your pull request conversations are resolved before merging. For more information, see "[About pull request reviews](/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews#discovering-and-navigating-conversations)" and "[About protected branches](/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#require-conversation-resolution-before-merging)."

        # https://github.com/github/releases/issues/1279
        - To prevent the merge of unexpected changes after auto-merge is enabled for a pull request, auto-merge is now disabled automatically when new changes are pushed by a user without write access to the repository. Users without write access can still update the pull request with changes from the base branch when auto-merge is enabled. To prevent a malicious user from using a merge conflict to introduce unexpected changes to the pull request, auto-merge for the pull request is disabled if the update causes a merge conflict. For more information about auto-merge, see "[Automatically merging a pull request](/github/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."

        # https://github.com/github/releases/issues/1550
        - People with maintain permissions can now manage the repository-level "Allow auto-merge" setting. This setting, which is off by default, controls whether auto-merge is available on pull requests in the repository. Previously, only people with admin permissions could manage this setting. Additionally, this setting can now by controlled using the "[Create a repository](/rest/reference/repos#create-an-organization-repository)" and "[Update a repository](/rest/reference/repos#update-a-repository)" REST APIs. For more information, see "[Managing auto-merge for pull requests in your repository](/github/administering-a-repository/configuring-pull-request-merges/managing-auto-merge-for-pull-requests-in-your-repository)."

        # https://github.com/github/releases/issues/1201
        - The assignees selection for issues and pull requests now supports type ahead searching so you can find users in your organization faster. Additionally, search result rankings have been updated to prefer matches at the start of a person's username or profile name.

        # https://github.com/github/releases/issues/1430
        - When a review is requested from a team of more than 100 people, developers are now shown a confirmation dialog box in order to prevent unnecessary notifications for large teams.

        # https://github.com/github/releases/issues/1293
        - Back-tick `code blocks` are now supported in issue titles, pull request titles, and in any place issue and pull request titles are referenced in {% data variables.product.prodname_ghe_server %}.

        # https://github.com/github/releases/issues/1300
        - Events for pull requests and pull request reviews are now included in the audit log for both [enterprises](/admin/user-management/managing-users-in-your-enterprise/auditing-users-across-your-enterprise) and [organizations](/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization). These events help admins better monitor pull request activity and help ensure security and compliance requirements are being met. Events can be viewed from the web UI, exported as CSV or JSON, or accessed via REST API. You can also search the audit log for specific pull request events. For more information, see "[Reviewing the audit log for your organization](/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization#pull_request-category-actions)."

    - heading: 'Branches changes'
      notes:
        # https://github.com/github/releases/issues/885
        - |
          The default branch name for new repositories is now `main`. Existing repositories are not impacted by this change. If users, organization owners, or enterprise owners have previously specified a default branch for new repositories, they are also not impacted.

          If you want to set a different default branch name, you can do so in the [user](/account-and-profile/setting-up-and-managing-your-github-user-account/managing-user-account-settings/managing-the-default-branch-name-for-your-repositories), [organization](/organizations/managing-organization-settings/managing-the-default-branch-name-for-repositories-in-your-organization), or [enterprise](/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-on-the-default-branch-name) settings.

        # https://github.com/github/releases/issues/981
        - |
          Branches, including the default branch, can now be renamed using the the {% data variables.product.product_name %} web UI. When a branch is renamed, any open pull requests and draft releases targeting the renamed branch will be retargeted automatically, and branch protection rules that explicitly reference the renamed branch will be updated.

          Admin permissions are required to rename the default branch, but write permissions are sufficient to rename other branches.

          To help make the change as seamless as possible for users:

          * A notice is shown to contributors, maintainers, and admins on the repository homepage with instructions for updating their local repository.
          * Web requests to the old branch will be redirected.
          * A "moved permanently" HTTP response will be returned to REST API calls.
          * An informational message is displayed to Git command line users that push to the old branch.

          For more information, see "[Renaming a branch](/github/administering-a-repository/managing-branches-in-your-repository/renaming-a-branch)."

    - heading: 'GitHub Actions changes'
      notes:
        # https://github.com/github/releases/issues/1227
        - '{% data variables.product.prodname_actions %} now lets you control the permissions granted to the `GITHUB_TOKEN` secret. The `GITHUB_TOKEN` is an automatically-generated secret that lets you make authenticated calls to the API for {% data variables.product.product_name %} in your workflow runs. {% data variables.product.prodname_actions %} generates a new token for each job and expires the token when a job completes. The token usually has `write` permissions to a number of [API endpoints](/actions/reference/authentication-in-a-workflow#permissions-for-the-github_token), except in the case of pull requests from forks, which are always `read`. These new settings allow you to follow a principle of least privilege in your workflows. For more information, see "[Authentication in a workflow](/actions/reference/authentication-in-a-workflow#modifying-the-permissions-for-the-github_token)."'

        # https://github.com/github/releases/issues/1280
        - '{% data variables.product.prodname_cli %} 1.9 and later allows you to work with {% data variables.product.prodname_actions %} in your terminal. For more information, see the [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-04-15-github-cli-1-9-enables-you-to-work-with-github-actions-from-your-terminal/).'

        # https://github.com/github/releases/issues/1157
        - The audit log now includes events associated with {% data variables.product.prodname_actions %} workflow runs. This data provides administrators with a greatly expanded data set for security and compliance audits. For more information, see "[Reviewing the audit log for your organization](/organizations/keeping-your-organization-secure/reviewing-the-audit-log-for-your-organization#workflows-category-actions)."

        # https://github.com/github/releases/issues/1587
        - Performance improvements have been made to {% data variables.product.prodname_actions %}, which may result in higher maximum job throughput. For more information on job throughput with internally-tested CPU and memory configurations, see "[Getting started with {% data variables.product.prodname_actions %} for {% data variables.product.prodname_ghe_server %}](/admin/github-actions/enabling-github-actions-for-github-enterprise-server/getting-started-with-github-actions-for-github-enterprise-server#review-hardware-considerations)."

    - heading: 'GitHub Packages changes'
      notes:
        # https://github.com/github/releases/issues/1088
        - Any package or package version for {% data variables.product.prodname_registry %} can now be deleted from {% data variables.product.product_name %}'s web UI. You can also undo the deletion of any package or package version within 30 days. For more information, see "[Deleting and restoring a package](/packages/learn-github-packages/deleting-and-restoring-a-package)".

    - heading: 'Dependabot and Dependency graph changes'
      notes:
        # https://github.com/github/releases/issues/1537
        - The dependency graph can now be enabled using the Management Console, rather than needing to run a command in the administrative shell. For more information, see "[Enabling alerts for vulnerable dependencies {% data variables.product.prodname_ghe_server %}](/admin/configuration/managing-connections-between-github-enterprise-server-and-github-enterprise-cloud/enabling-alerts-for-vulnerable-dependencies-on-github-enterprise-server#enabling-the-dependency-graph-and-dependabot-alerts-for-vulnerable-dependencies-on-github-enterprise-server)."

        # https://github.com/github/releases/issues/1153
        - Notifications for multiple {% data variables.product.prodname_dependabot_alerts %} are now grouped together if they're discovered at the same time. This significantly reduces the volume of {% data variables.product.prodname_dependabot %} alert notifications that users receive. For more information, see the [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-03-18-grouped-dependabot-alert-notifications/).

        # https://github.com/github/releases/issues/1371
        - Dependency graph and {% data variables.product.prodname_dependabot_alerts %} now support Go modules. {% data variables.product.prodname_ghe_server %} analyzes a repository's `go.mod` files to understand the repository’s dependencies. Along with security advisories, the dependency graph provides the information needed to alert developers to vulnerable dependencies. For more information about enabling the dependency graph on private repositories, see "[Securing your repository](/code-security/getting-started/securing-your-repository#managing-the-dependency-graph)."

        # https://github.com/github/releases/issues/1538
        - The default notification settings for security alerts have changed. Previously, if you had permission to view security alerts in a repository, you would receive notifications for that repository as long as your settings allowed for security alert notifications. Now, you must opt in to security alert notifications by watching the repository. You will be notified if you select `All Activity` or configure `Custom` to include `Security alerts`. All existing repositories will be automatically migrated to these new settings and you will continue to receive notifications; however, any new repositories will require opting-in by watching the repository. For more information see "[Configuring notifications for vulnerable dependencies](/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/configuring-notifications-for-vulnerable-dependencies)" and "[Managing alerts from secret scanning](/code-security/secret-security/managing-alerts-from-secret-scanning)."

    - heading: 'Code scanning and secret scanning changes'
      notes:
        # https://github.com/github/releases/issues/1352
        - '{% data variables.product.prodname_code_scanning_capc %} with {% data variables.product.prodname_codeql %} now generates diagnostic information for all supported languages. This helps check the state of the created database to understand the status and quality of performed analysis. The diagnostic information is available starting in [version 2.5.6](https://github.com/github/codeql-cli-binaries/releases) of the [{% data variables.product.prodname_codeql_cli %}](https://codeql.github.com/docs/codeql-cli/). You can see the detailed diagnostic information in the {% data variables.product.prodname_actions %} logs for {% data variables.product.prodname_codeql %}. For more information, see "[Viewing code scanning logs](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/viewing-code-scanning-logs)."'

        # https://github.com/github/releases/issues/1360
        - '{% data variables.product.prodname_code_scanning_capc %} with {% data variables.product.prodname_codeql_cli %} now supports analyzing several languages during a single build. This makes it easier to run code analysis to use CI/CD systems other than {% data variables.product.prodname_actions %}. The new mode of the `codeql database create` command is available starting [version 2.5.6](https://github.com/github/codeql-cli-binaries/releases) of the [{% data variables.product.prodname_codeql_cli %}](https://codeql.github.com/docs/codeql-cli/). For more information about setting this up, see "[Installing {% data variables.product.prodname_codeql_cli %} in your CI system](/code-security/secure-coding/using-codeql-code-scanning-with-your-existing-ci-system/running-codeql-cli-in-your-ci-system)."'

        # https://github.com/github/releases/issues/1160
        - '{% data variables.product.prodname_code_scanning_capc %} alerts from all enabled tools are now shown in one consolidated list, so that you can easily prioritize across all alerts. You can view alerts from a specific tool by using the "Tool" filter, and the "Rule" and "Tag" filters will dynamically update based on your "Tool" selection.'

        # https://github.com/github/releases/issues/1454
        - '{% data variables.product.prodname_code_scanning_capc %} with {% data variables.product.prodname_codeql %} now includes beta support for analyzing C++20 code. This is only available when building codebases with GCC on Linux. C++20 modules are not supported yet.'

        # https://github.com/github/releases/issues/1375
        - The depth of {% data variables.product.prodname_codeql %}'s analysis has been improved by adding support for more [libraries and frameworks](https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/) and increasing the coverage of our existing library and framework models for several languages ([C++](https://github.com/github/codeql/tree/main/cpp), [JavaScript](https://github.com/github/codeql/tree/main/javascript), [Python](https://github.com/github/codeql/tree/main/python), and [Java](https://github.com/github/codeql/tree/main/java)). As a result, {% data variables.product.prodname_codeql %} can now detect even more potential sources of untrusted user data, review the steps through which that data flows, and identify potentially dangerous sinks in which this data could end up. This results in an overall improvement of the quality of the {% data variables.product.prodname_code_scanning %} alerts. For more information, see the [{% data variables.product.prodname_dotcom %} changelog](https://github.blog/changelog/2021-07-01-codeql-code-scanning-now-recognizes-more-sources-and-uses-of-untrusted-user-data/).

        # https://github.com/github/releases/issues/1335
        # https://github.com/github/releases/issues/1314
        - |
          {% data variables.product.prodname_code_scanning_capc %} now shows `security-severity` levels for CodeQL security alerts. You can configure which `security-severity` levels will cause a check failure for a pull request. The severity level of security alerts can be `critical`, `high`, `medium`, or `low`. By default, any {% data variables.product.prodname_code_scanning %} alerts with a `security-severity` of `critical` or `high` will cause a pull request check failure. 

          Additionally, you can now also configure which severity levels will cause a pull request check to fail for non-security alerts. You can configure this behavior at the repository level, and define whether alerts with the severity `error`, `warning`, or `note` will cause a pull request check to fail. By default, non-security {% data variables.product.prodname_code_scanning %} alerts with a severity of `error` will cause a pull request check failure.

          For more information see "[Defining which alert severity levels cause pull request check failure](/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#defining-the-severities-causing-pull-request-check-failure)."

          ![List of code scanning alerts with security levels](/assets/images/enterprise/3.2/release-notes/code-scanning-alerts.png)

        # https://github.com/github/releases/issues/1324
        - |
          Improvements to the branch filter for {% data variables.product.prodname_code_scanning %} alerts make it clearer which {% data variables.product.prodname_code_scanning %} alerts are being displayed on the alerts page. By default, {% data variables.product.prodname_code_scanning %} alerts are filtered to show alerts for the default branch of the repository only. You can use the branch filter to display the alerts on any of the non-default branches. Any branch filter that has been applied is shown in the search bar.

          The search syntax has also been simplified to `branch:<branch name>`. This syntax can be used multiple times in the search bar to filter on multiple branches. The previous syntax, `ref:refs/heads/<branch name>`, is still supported, so any saved URLs will continue to work.

        # https://github.com/github/releases/issues/1313
        - |
          Free text search is now available for code scanning alerts. You can search code scanning results to quickly find specific alerts without having to know exact search terms. The search is applied across the alert's name, description, and help text. The syntax is:

          - A single word returns all matches.
          - Multiple search words returns matches to either word.
          - Words in double quotes returns exact matches.
          - The keyword 'AND' returns matches to multiple words.

        - '{% data variables.product.prodname_secret_scanning_caps %} added patterns for 23 new service providers. For the updated list of supported secrets, see "[About secret scanning](/code-security/secret-scanning/about-secret-scanning)."'

    - heading: API Changes
      notes:
        # https://github.com/github/releases/issues/1253
        - Pagination support has been added to the Repositories REST API's "compare two commits" endpoint, which returns a list of commits reachable from one commit or branch, but unreachable from another. The API can also now return the results for comparisons over 250 commits. For more information, see the "[Repositories](/rest/reference/repos#compare-two-commits)" REST API documentation and "[Traversing with pagination](/rest/guides/traversing-with-pagination)."

        # https://github.com/github/releases/issues/969
        - The REST API can now be used to programmatically resend or check the status of webhooks. For more information, see "[Repositories](/rest/reference/repos#webhooks)," "[Organizations](/rest/reference/orgs#webhooks)," and "[Apps](/rest/reference/apps#webhooks)" in the REST API documentation.

        # https://github.com/github/releases/issues/1349
        - |
          Improvements have been made to the code scanning and {% data variables.product.prodname_GH_advanced_security %} APIs:

          - The code scanning API now returns the CodeQL query version used for an analysis. This can be used to reproduce results or confirm that an analysis used the latest query. For more information, see "[Code scanning](/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository)" in the REST API documentation.
          - Admin users can now use the REST API to enable or disable {% data variables.product.prodname_GH_advanced_security %} for repositories, using the `security_and_analysis` object on `repos/{org}/{repo}`. In addition, admin users can check whether {% data variables.product.prodname_advanced_security %} is currently enabled for a repository by using a `GET /repos/{owner}/{repo}` request. These changes help you manage {% data variables.product.prodname_advanced_security %} repository access at scale. For more information, see "[Repositories](/rest/reference/repos#update-a-repository)" in the REST API documentation.

  # No security/bug fixes for the RC release
  # security_fixes:
  #   - PLACEHOLDER

  # bugs:
  #   - PLACEHOLDER

  known_issues:
    - On a freshly set up {% data variables.product.prodname_ghe_server %} without any users, an attacker could create the first admin user.
    - Custom firewall rules are removed during the upgrade process.
    - Git LFS tracked files [uploaded through the web interface](https://github.com/blog/2105-upload-files-to-your-repositories) are incorrectly added directly to the repository.
    - Issues cannot be closed if they contain a permalink to a blob in the same repository, where the blob's file path is longer than 255 characters.
    - When "Users can search GitHub.com" is enabled with GitHub Connect, issues in private and internal repositories are not included in GitHub.com search results.
    - The {% data variables.product.prodname_registry %} npm registry no longer returns a time value in metadata responses. This was done to allow for substantial performance improvements. We continue to have all the data necessary to return a time value as part of the metadata response and will resume returning this value in the future once we have solved the existing performance issues.
    - Resource limits that are specific to processing pre-receive hooks may cause some pre-receive hooks to fail.

  deprecations:
    - heading: Deprecation of GitHub Enterprise Server 2.21
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 2.21 was discontinued on June 6, 2021**. That means that no patch releases will be made, even for critical security issues, after this date. For better performance, improved security, and new features, [upgrade to the newest version of {% data variables.product.prodname_ghe_server %}](/enterprise-server@3.2/admin/enterprise-management/upgrading-github-enterprise-server) as soon as possible.'
    - heading: Deprecation of GitHub Enterprise Server 2.22
      notes:
        - '**{% data variables.product.prodname_ghe_server %} 2.22 will be discontinued on September 23, 2021**. That means that no patch releases will be made, even for critical security issues, after this date. For better performance, improved security, and new features, [upgrade to the newest version of {% data variables.product.prodname_ghe_server %}](/enterprise-server@3.2/admin/enterprise-management/upgrading-github-enterprise-server) as soon as possible.'
    - heading: Deprecation of XenServer Hypervisor support
      notes:
        # https://github.com/github/docs-content/issues/4439
        - Beginning in {% data variables.product.prodname_ghe_server %} 3.1, we will begin discontinuing support for Xen Hypervisor. The complete deprecation is scheduled for {% data variables.product.prodname_ghe_server %} 3.3, following the standard one year deprecation window. Please contact [GitHub Support](https://support.github.com/contact) with questions or concerns.
    - heading: Removal of Legacy GitHub Services
      notes:
        # https://github.com/github/releases/issues/1506
        - '{% data variables.product.prodname_ghe_server %} 3.2 removes unused GitHub Service database records. More information is available in the [deprecation announcement post](https://developer.github.com/changes/2018-04-25-github-services-deprecation/).'
    - heading: Deprecation of OAuth Application API endpoints and API authentication via query parameters
      notes:
        # https://github.com/github/releases/issues/1316
        - |
          To prevent accidental logging or exposure of `access_tokens`, we discourage the use of OAuth Application API endpoints and the use of API auth via query params. Visit the following posts to see the proposed replacements:

          * [Replacement OAuth Application API endpoints](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/#changes-to-make)
          * [Replacement auth via headers instead of query param](https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/#changes-to-make)

          These endpoints and auth route are planned to be removed from {% data variables.product.prodname_ghe_server %} in {% data variables.product.prodname_ghe_server %} 3.4.
    - heading: Removal of legacy GitHub App webhook events and endpoints
      notes:
        # https://github.com/github/releases/issues/965
        - |
          Two legacy GitHub Apps-related webhook events have been removed: `integration_installation` and `integration_installation_repositories`. You should instead be listening to the `installation` and `installation_repositories` events.
        - |
          The following REST API endpoint has been removed: `POST /installations/{installation_id}/access_tokens`. You should instead be using the namespaced equivalent `POST /app/installations/{installation_id}/access_tokens`.

  backups:
    - '{% data variables.product.prodname_ghe_server %} 3.2 requires at least [GitHub Enterprise Backup Utilities 3.2.0](https://github.com/github/backup-utils) for [Backups and Disaster Recovery](/enterprise-server@3.2/admin/configuration/configuring-backups-on-your-appliance).'
