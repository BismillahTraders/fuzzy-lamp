---
date: '2021-04-01'
intro: 'Os requisitos mínimos de infraestrutura aumentaram para {% data variables.product.prodname_ghe_server %} 3.0+. Para obter mais informações, consulte "[Sobre requisitos mínimos para o GitHub Enterprise Server 3.0 e posterior](/admin/enterprise-management/upgrading-github-enterprise-server#about-minimum-requirements-for-github-enterprise-server-30-and-later)."'
sections:
  security_fixes:
    - "**ALTO:** Uma vulnerabilidade de controle de acesso imprópria foi identificada no GitHub Enterprise Server, que permitiu o acesso a tokens gerados a partir do [fluxo de autenticação web] aplicativo GitHub] (https://docs.github.com/en/developers/apps/identifying-and-authorizing-users-for-github-apps#web-application-flow) para ler os metadados do repositório privado por meio da API REST sem ter sido concedida as permissões adequadas. Para explorar essa vulnerabilidade, um invasor precisa criar um aplicativo no GitHub na instância e ter um usuário autorizando o aplicativo através do fluxo de autenticação web. Os metadados do repositório privado retornados seriam limitados aos repositórios pertencentes ao usuário identificados pelo token. Esta vulnerabilidade afetou todas as versões do GitHub Enterprise Server antes da versão 3.0.4 e foi corrigida nas versões 3.0.4, 2.22.10, 2.21.18. A esta vulnerabilidade foi atribuída CVE-2021-22865 e foi relatada por meio do [Programa de Recompensa de Erro do GitHub](https://bounty.github.com)."
    - Os pacotes foram atualizados para as últimas versões de segurança.
  bugs:
    - Quando o modo de manutenção foi habilitado, alguns serviços continuaram a ser listados como "processos ativos" mesmo que esperasse que eles estivessem sendo executados, e não deveriam ter sido listados.
    - Após a atualização da versão 2.22.x para 3.0.x com o GitHub Actions habilitado, a versão do executor auto-hospedado não foi atualizada e não foi feita nenhuma atualização auto-hospedada.
    - As criações antigas do GitHub Pages não foram limpas, levando a um maior uso de disco.
    - 'O arquivo `memcached` não estava sendo executado em réplicas ativas.'
    - A atualização falhou ao atualizar as permissões de arquivos quando o GitHub Actions foi habilitado.
    - Um fuso horário definido no GitHub Enterprise 11.10.x ou mais cedo não estava sendo usado por alguns serviços que tinham o fuso horário UTC.
    - Os serviços não estavam sendo transferidos para novos arquivos de registro como parte da rotação de registro, resultando em aumento no uso do disco.
    - O utilitário `ghe-saml-mapping-csv` de linha de comando apresentou uma mensagem de aviso.
    - A etiqueta nos resultados de pesquisa para repositórios internos foi mostrada como "Privado" em vez de "Interno".
  known_issues:
    - Em uma nova configuração do GitHub Enterprise Server sem nenhum usuário, um invasor pode criar o primeiro usuário administrador.
    - As regras personalizadas de firewall não são mantidas durante uma atualização.
    - Arquivos LFS do Git [enviados através da interface web](https://github.com/blog/2105-upload-files-to-your-repositories) são adicionados diretamente ao repositório e de forma incorreta.
    - Os problemas não podem ser fechados se contiverem um permalink para um blob no mesmo repositório onde o caminho do arquivo tem mais de 255 caracteres.
    - Quando "Usuários podem pesquisar pelo GitHub.com" está habilitado com o GitHub Connect, os problemas em repositórios privados e internos não estão incluídos nos resultados de pesquisa do GitHub.com.
    - A interpretação do caderno Jupyter na interface do usuário pode falhar se o caderno de anotações incluir caracteres que não são ASCII UTF-8.
    - O reStructuredText (RST) interpretado na interface do usuário da web pode falhar e, em vez disso, exibir texto de markup RST.
    - Ao excluir um branch após o merge de um pull request, será exibida uma mensagem de erro, embora a exclusão do branch tenha êxito.
    - Quando um nó de réplica está off-line em uma configuração de alta disponibilidade, {% data variables.product.product_name %} ainda pode encaminhar solicitações de {% data variables.product.prodname_pages %} para o nó off-line, reduzindo a disponibilidade de {% data variables.product.prodname_pages %} para os usuários.
    - Os limites de recursos que são específicos para processamento de hooks pre-receive podem causar falha em alguns hooks pre-receive.
